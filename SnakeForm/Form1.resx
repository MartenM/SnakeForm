<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAD///8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFAAAADgAAABUAAAAWAAAAFQAA
        AA4AAAAFAAAAAAAAAAUAAAAOAAAAFQAAABYAAAAVAAAADgAAAAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAP///wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwAAABsAAAAzAAAAQAAA
        AEMAAABAAAAAMgAAABsAAAANAAAAGwAAADIAAABAAAAAQwAAAEAAAAAzAAAAGwAAAAcAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUAAAAbCBsRRSaB
        TtIqjVX/KoxU/yqNVf8mgU7SBhUNRQAAADAGFQ1FJoFO0iqNVf8qjFT/Ko1V/yaBTtIIGxFFAAAAGwAA
        AAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADgkf
        Ez0qjVX/McR9/zbwnv827p3/NvCe/zHEff8qjVX/DS0bZCqNVf8xxH3/NvCe/zbunf828J7/McR9/yqN
        Vf8JHxM9AAAADgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAVJ4NQzjHBe/8355f/NuOU/zbik/8245T/N+eX/zHAe/8pi1T/McB7/zfnl/8245T/NuKT/zbj
        lP8355f/McF7/yeDUM4AAAAVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA////AAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAQAAABcpjVX/NuSS/zbdjv83243/N9uN/zfbjf833Y//OOOT/yiGUP8445P/N92P/zfb
        jf83243/N9uN/zbdjv815JL/KI1U/wAAABcAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAD///8AAAAAAAAA
        AAAAAAAFAAAADgAAABUAAAAXCiQWMSaMU/9p56r/M9aH/zbWiP841on/ONaJ/zjXiv85243/LJtg/znb
        jf8414r/ONaJ/zjWif821oj/M9aH/2nmqv8+oWv/CiMVMQAAABcAAAAVAAAADgAAAAUAAAAAAAAAAP//
        /wAAAAAAAAAABwAAABsAAAAzAAAAQAAAAEMAAABII4xR/7732/8504T/NdCB/znRg/860YT/OtKE/zvV
        h/8tml//O9WH/zrShP860YT/OdGD/zXQgf850oT/vffa/yKLUf8AAABIAAAAQwAAAEAAAAAzAAAAGwAA
        AAcAAAAA////AAAAAAUAAAAbCBsRRSaBTtIqjVX/KoxU/ymMVP8ih072icil/7rw1P86zH//Nsl9/zrL
        f/87y4D/PM+D/yyZXf88z4P/O8uA/zrLf/82yX3/Osx//7rw1P+IyKT/IodO9imMVP8qjFT/Ko1V/yaB
        TtIIGxFFAAAAGwAAAAX///8AAAAADgkfEz0qjlX/McJ9/zftnf837Jv/N+2c/y7Aev8ehkv/ks6s/7nu
        0f87x3v/N8R4/zvGe/89yX3/LJld/z3Jff87xnv/N8R4/zvHe/+57tH/ks6s/x6GS/8uwHr/N+2c/zfs
        m/837Z3/McJ9/yqOVf8JHxM9AAAADv///wAAAAAVJ4RQzjK+eP854ZH/ON2O/zjcjf843Y7/OOCQ/y+/
        eP8dhkv/ks2s/7rs0P88wXb/OMB0/z3EeP8smFz/PcR4/zjAdP88wXb/uuzQ/5LNrP8dhkv/L794/zjg
        kP843Y7/ONyN/zjdjv854ZH/Mr54/yeEUM4AAAAV////AAAAABYojlX/OtmK/znThv860YX/OtGF/zrR
        hf8604b/OtaI/zC6cv8dh0z/kcyr/7rpzf8+vXH/PL1v/yyXWf88vW//Pr1x/7rpzf+RzKv/HYdM/zC6
        cv861oj/OtOG/zrRhf860YX/OtGF/znThv852In/J41U/wAAABb///8AAAAAFSWOVP9t3KD/N8d6/zrH
        fP88yH3/PMh9/zzIff88yX7/PMyA/zG0bf8diEz/k8yn/8Doxv9GuWX/LJRK/0a5Zf/A6Mb/k8yn/x2I
        TP8xtG3/PMyA/zzJfv88yH3/PMh9/zzIff87yHz/OMh6/23boP89oGn/AAAAFf///wAAAAAOIo5S/8Dv
        0/88wXT/N75w/zu/cv88v3P/PL9z/zzAc/88wHT/PcN1/zKtY/8gh0L/WMXj/xi6//8buv//GLr//1jF
        4/8gh0L/Mq1j/z3Ddf88wHT/PMBz/zy/c/88v3P/O79z/zm+cf80vm7/tuvN/yKNUv8AAAAO////AAAA
        AAUiilHEiMej/7rny/9lxYr/MrJj/zOyZf80smX/NLJl/zSyZf80s2X/ObVf/yWzv/8rx///X+n//2Ts
        //9f6f//K8f//yWzv/85tV//NLNl/zSyZf80smX/NLJl/zOyZf8zsmT/R7pz/5zctf+Kx6T/I4pRxAAA
        AAX///8AAAAAABJDKBggjVH/h8Sg/9vv3//Z7d7/2e3d/9jt3f/Y7d3/2O3d/9rt3P/h7tX/FLr//1Td
        //9X3v7/V93+/1je/v9U3f//FLn//+Du1P/a7dz/2O3d/9jt3f/Y7d3/2e3d/9nt3v/c7+D/icWi/yCO
        Uf8SQygYAAAAAP///wAAAAAFAAAAGw41H1Uii1D/HIZK/z+XZP9KnWz/SZ1r/0mda/9JnWv/Sp1p/02d
        YP8TuP//nOj//0fQ/v9I0f7/R9H+/4/k//81xP//SqN7/0mcaf9JnWv/SZ1r/0mda/9KnWz/S55t/xyF
        Sv8ii1D/DzUfVQAAABsAAAAF////AAAAAA4IGxE7KY5V/y/BfP807Jr/M+mY/zHol/8x6Jf/MeiX/zDo
        lv8u6JP/N+uQ/xC2///k+P//i93+/2bS/v+L3f7/5Pj//w+2//8264//LuiS/zDolv8x6Jf/MeiX/zHo
        l/8y6Zj/NOua/y/BfP8pjlX/CBsROwAAAA7///8AAAAAFSeEUM4yvnj/OeGR/zjdjv843I3/ONuM/zjb
        jP8224z/M9qJ/zfbjP+7+NP/Usjm/1jN///s9///9/z//+z3//9Yzf//Ucjm/7v40/8324z/M9qJ/zbb
        jP8424z/ONuM/zjcjf843Y7/OeGR/zK+eP8mhFDOAAAAFf///wAAAAAWKI5V/0TbkP8504b/OtGF/zrR
        hf860YX/OdGE/zXPgv850YT/uPLU/5LPq/8fhD//IMDL/xO3//8wwf//E7f//yDAy/8fgz//ks+r/7jy
        1P850YT/Nc+C/znRhP860YX/OtGF/zrRhf8504X/RNuQ/yeNVP8AAAAW////AAAAABUljlT/bdyg/zfH
        ev86x3z/O8h8/zrHfP83xnr/O8l9/7nu0v+Sz63/HoVK/zC/dP8434j/ON+F/yqaUv834Yb/N+GJ/zDA
        df8ehUr/ks+t/7nu0v87yX3/N8Z6/zrHfP87yHz/Osd8/zfHev9s25//PaBp/wAAABX///8AAAAADiKO
        Uv/A79P/PMF0/za9b/84vnD/Nr1v/zvAc/+6687/ks2s/x2GTP8wu3T/OdmK/znWh/862Yn/LJpc/znb
        i/842Yr/ONuM/y+9df8dhkv/ks2r/7rrzv87wHP/Nr1v/zi+cP82vW//PMF0/7/v0/8hjFH/AAAADv//
        /wAAAAAFIopRxIjHo/+658v/ZMWJ/1rBgf9kxYn/uebK/5HLqv8dh0z/MLhx/zrThf860IP/Os+C/zvS
        hf8tml7/O9WH/zrShP8604X/OtaH/zC6cv8dh0z/kcuq/7nmyv9kxYn/WsGB/2TFif+658v/iMej/yKK
        UcQAAAAF////AAAAAAAaXzkUII1R/4fFof/b8OD/2e/e/9vw4P+HxKD/HYhN/zG1bv87zX//O8t+/zvJ
        ff87yn3/PMx//yyYXf88z4P/O8yA/zvLgP87zIH/O8+D/zG2b/8diE3/h8Sg/9vw4P/Z797/2/Dg/4fF
        of8gjVH/Gl85FAAAAAD///8AAAAAAAAAAAAdaT8SIoxSwR6NUf8djE//Ho1Q/yCKUfUyrWn/Pcd7/z3E
        ev89w3n/PcN5/z3Def89xnr/Kphc/zvJfP88xnv/PMZ7/zzGe/88x3z/PMp9/zKwav8gilD1Ho1Q/x2M
        T/8ejVH/IoxSwR1pPxIAAAAAAAAAAP///wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAXJo9W/0jG
        fP89v3T/Pr50/z6+dP8+vnT/PL5z/0bDef9IoXD/Ws2L/zvBdf89wXf/PcF3/z3Bd/88wnf/R8p//yaO
        Vf8AAAAXAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAA////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABA3
        IiAlj1X/b82T/zq2a/89t27/Prhu/z23bv86tmv/bMuQ/0Cdav9rz5P/OLpu/zy7cP89vHH/PLtw/zm6
        bv9u0Jb/PJ1o/w83ISAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///8AAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAADiKOU//B6c//P7No/ziwZP86sWX/OLBk/z+zaP++6M3/GIdL/77qz/8+t23/N7Ro/zm1
        af83tGj/Prdt/8Dr0P8ijlL/AAAADgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///wAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAFIopRxInGof+74sf/ZryC/1y4ev9mvIL/u+LH/4jGof8ci07/iMWi/7rk
        yf9lwYX/W719/2XBhf+65Mn/isai/yKKUcQAAAAFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA////AAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAaXzkUII5R/4fFoP/b79//2e/e/9vv3/+HxaD/H41R/xtq
        PyofjVH/h8ag/9vw3//Z8N7/2/Df/4fGoP8gjlH/Gl85FAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD///8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdaT8SIoxSwR6NUf8djVD/Ho1R/yKM
        UsEbYToPAAAAABthOg8ijFLBHo1R/x2MUP8ejVH/IoxSwR1pPxIAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A/4CA//8AAH/+AAA//gAAP/4AAD/8AAAf4AAAA8AAAAGAAAAAgAAAAIAA
        AACAAAAAgAAAAIAAAACAAAAAwAAAAYAAAACAAAAAgAAAAIAAAACAAAAAgAAAAIAAAADAAAAB4AAAA/wA
        AB/+AAA//gAAP/4AAD//AAB//4CA//////8=
</value>
  </data>
</root>